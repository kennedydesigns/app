/*
 * File: app/controller/Task.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Task', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            mainView: '#Main',
            taskForm: '#TaskForm',
            taskList: '#TaskList'
        },

        control: {
            "#TaskList": {
                itemtap: 'onListItemTap'
            },
            "[action=save]": {
                tap: 'onSave'
            },
            "[action=delete]": {
                tap: 'onDelete'
            }
        }
    },

    onListItemTap: function(dataview, index, target, record, e, options) {
        var form = Ext.create("MyApp.view.TaskForm",
        {
            title: record.data.TicklerID
        });

        this.getMainView().push(form);

    form.setRecord(record)};
            }

    },

    onSave: function(button, e, options) {
        var me = this;
        var form = this.getTaskForm();
        var values = form.getVaules();
        var record = form.getRecord();

        record.set(values);

        if (record.isValid()) {
            record.save({
                success: function()
                {
                    me.getMainView().pop();
                    me.getTaskList().deselectALL();
                }
            }};

        }
        else
        Ext.Msg.alert("Error", "There are errors with the record!");
    }

    },

    onDelete: function(button, e, options) {
        var me = this;
        var form = this.getTaskForm();
        var record = form.getRecord();

        record.erase({
            success: function()
            {
                record.stores[0].remove(record);
                me.getMainView().pop();
            }
        });


    }

});